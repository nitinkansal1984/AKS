##Create resource group
az group create -l eastus -n MyResourceGroup

##Launch 1 node AKS Cluster
az aks create --resource-group myResourceGroup --name myAKSCluster --node-count 1 

## Let's now download the credentials of the cluster and connect to it.
az aks get-credentials --resource-group MyResourceGroup --name MyAKSCluster --overwrite

## Lets see the number of nodes part of cluster
kubectl get nodes

## Command to see name of node pool and number of nodes in cluster
az aks show --resource-group myResourceGroup --name myAKSCluster --query agentPoolProfiles

## Go to AKS blade and notice the system pool named nodepool and number of nodes. Also notice the option to scale the number of nodes from there directly.

## Let's now scale the cluster to 2 worker nodes
az aks scale --resource-group myResourceGroup --name myAKSCluster --node-count 2 --nodepool-name nodepool1


## Lets verify the number of nodes now
az aks show --resource-group myResourceGroup --name myAKSCluster --query agentPoolProfiles
kubectl get nodes


NOTE: You can not scale down system nodepool to 0 nodes, it always need minimum 2 running node. But you can scale down user nodepool to 0.

Let's see that in action:

az aks nodepool scale --name nodepool1 --cluster-name myAKSCluster --resource-group myResourceGroup  --node-count 0


We will learn about system node pool and user nodepool in subsequent lectures.

In this demo, we have seen manually scaling up/down of system nodepool. In next lecture we will learn automatic scaling. Thanks !

